Opcodes
=======

.. contents::

This documentation details opcodes for Swampeak interpreter.

Operand Types
-------------

+------------+----------------------------------+----------------------------+
| Name       | Description                      | Literal Example            |
+============+==================================+============================+
| **any**    | Any type of operand              | See types below            |
+------------+----------------------------------+----------------------------+
| **u8**     | Unsigned 8-bit integer           | ``0xff``                   |
+------------+----------------------------------+----------------------------+
| **u16**    | Unsigned 16-bit integer          | ``0xffff``                 |
+------------+----------------------------------+----------------------------+
| **u32**    | Unsigned 32-bit integer          | ``0xffffffff``             |
+------------+----------------------------------+----------------------------+
| **u64**    | Unsigned 32-bit integer          | ``0xffffffffffffffffL``    |
+------------+----------------------------------+----------------------------+
| **i8**     | Unsigned 8-bit integer           | ``127``                    |
+------------+----------------------------------+----------------------------+
| **i16**    | Unsigned 16-bit integer          | ``65535``                  |
+------------+----------------------------------+----------------------------+
| **i32**    | Unsigned 32-bit integer          | ``2147483647``             |
+------------+----------------------------------+----------------------------+
| **i64**    | Unsigned 32-bit integer          | ``9223372036854775807L``   |
+------------+----------------------------------+----------------------------+
| **float**  | IEEE 754 32-bit FP number        | ``3.1415926f``             |
+------------+----------------------------------+----------------------------+
| **double** | IEEE 754 64-bit FP number        | ``3.1415926``              |
+------------+----------------------------------+----------------------------+
| **string** | Null-terminated string           | ``"Hello, world!"``        |
+------------+----------------------------------+----------------------------+
| **addr**   | Alias for `u64`, used as address | See the original type      |
+------------+----------------------------------+----------------------------+

Opcode Table
------------

nop
~~~

+-----+----------+----------+-------------------------+
| Hex | Mnemonic | Operands | Description             |
+=====+==========+==========+=========================+
| 00  | nop      | (None)   | Push an immediate value |
+-----+----------+----------+-------------------------+

Execute nothing.

push
~~~~

+-----+----------+----------+-------------------------+
| Hex | Mnemonic | Operands | Description             |
+=====+==========+==========+=========================+
| 01  | push     | **any**  | Push an immediate value |
+-----+----------+----------+-------------------------+

Push an immediate value onto the stack.

pop
~~~

+-----+----------+------------+--------------------------------------------------------+
| Hex | Mnemonic | Operands   | Description                                            |
+=====+==========+============+========================================================+
| 02  | pop      | (None)     | Pop and discard a value                                |
|     |          +------------+--------------------------------------------------------+
|     |          | **addr**   | Pop and save a value to specified address in data area |
|     |          +------------+--------------------------------------------------------+
|     |          | **u64** `n`| Pop and discard `n` values                             |
+-----+----------+------------+--------------------------------------------------------+

Pop values from the stack.
