Opcodes
=======

.. contents::

This documentation details opcodes for Slake interpreter.

Operand Types
-------------

+------------+----------------------------------+----------------------------+
| Name       | Description                      | Literal Example            |
+============+==================================+============================+
| **any**    | Any type                         | See types below            |
+------------+----------------------------------+----------------------------+
| **u8**     | Unsigned 8-bit integer           | ``0xff``                   |
+------------+----------------------------------+----------------------------+
| **u16**    | Unsigned 16-bit integer          | ``0xffff``                 |
+------------+----------------------------------+----------------------------+
| **u32**    | Unsigned 32-bit integer          | ``0xffffffff``             |
+------------+----------------------------------+----------------------------+
| **u64**    | Unsigned 64-bit integer          | ``0xffffffffffffffffL``    |
+------------+----------------------------------+----------------------------+
| **uint**   | Alias for unsigned integers      | See original types         |
+------------+----------------------------------+----------------------------+
| **i8**     | Signed 8-bit integer             | ``127``                    |
+------------+----------------------------------+----------------------------+
| **i16**    | Signed 16-bit integer            | ``65535``                  |
+------------+----------------------------------+----------------------------+
| **i32**    | Signed 32-bit integer            | ``2147483647``             |
+------------+----------------------------------+----------------------------+
| **i64**    | Signed 64-bit integer            | ``9223372036854775807L``   |
+------------+----------------------------------+----------------------------+
| **int**    | Alias for signed integers        | See original types         |
+------------+----------------------------------+----------------------------+
| **float**  | IEEE 754 32-bit FP number        | ``3.1415926f``             |
+------------+----------------------------------+----------------------------+
| **double** | IEEE 754 64-bit FP number        | ``3.1415926``              |
+------------+----------------------------------+----------------------------+
| **fp**     | Alias for floating-point numbers | See original types         |
+------------+----------------------------------+----------------------------+
| **string** | Null-terminated string           | ``"Hello, world!"``        |
+------------+----------------------------------+----------------------------+
| **ref**    | Reference                        | ``std.core.task``          |
+------------+----------------------------------+----------------------------+

Operation Code Table
--------------------

nop
~~~

+-----+----------+----------+-------------------------+
| Hex | Mnemonic | Operands | Description             |
+=====+==========+==========+=========================+
| 00  | nop      | (None)   | Execute nothing         |
+-----+----------+----------+-------------------------+

push
~~~~

+-----+----------+----------+-------------------------+
| Hex | Mnemonic | Operands | Description             |
+=====+==========+==========+=========================+
| 01  | push     | **any**  | Push an immediate value |
+-----+----------+----------+-------------------------+

pop
~~~

+-----+----------+-------------+--------------------------------------------------------+
| Hex | Mnemonic | Operands    | Description                                            |
+=====+==========+=============+========================================================+
| 02  | pop      | (None)      | Pop and discard a value                                |
|     |          +-------------+--------------------------------------------------------+
|     |          | **ref**     | Pop and save a value to specified variable             |
|     |          +-------------+--------------------------------------------------------+
|     |          | **uint** `n`| Pop and discard values for `n` times                   |
+-----+----------+-------------+--------------------------------------------------------+

load
~~~~

+-----+----------+-------------+---------------------------------------------------------+
| Hex | Mnemonic | Operands    | Description                                             |
+=====+==========+=============+=========================================================+
| 02  | load     | **ref**     | Load a value onto stack from a variable.                |
|     |          +-------------+---------------------------------------------------------+
|     |          | (None)      | Indirect version, it pops a value as the operand.       |
+-----+----------+-------------+---------------------------------------------------------+

store
~~~~~

+-----+----------+-------------+---------------------------------------------------------+
| Hex | Mnemonic | Operands    | Description                                             |
+=====+==========+=============+=========================================================+
| 02  | load     | (None)      | Load a value indirectly, it pop 1 value as the operand. |
|     |          +-------------+---------------------------------------------------------+
|     |          | **ref**     | Load a value onto stack from a variable.                |
+-----+----------+-------------+---------------------------------------------------------+
