pub interface Exception {
	operator string();
}

pub class BasicException(@Exception) {
	final string _msg;
	operator new(string msg) { _msg = msg; }
	operator string() { return _msg; }
}

pub class LogicalError(@BasicException) {
	operator new(string msg) { base(msg) }
}

pub class DivideByZeroError(@BasicException) {
}

pub class CriticalError(@BasicException) {
}

pub class OutOfMemoryError(@BasicException) {
}

pub class InvalidOpcodeError(@BasicException) {
}

pub class InvalidOperandsError(@BasicException) {
}
