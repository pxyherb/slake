class Range<T>: @iter::BidirIterable<T> {
	@T begin, end;
	@T->(usize n) stepper;
	usize i;

	pub operator new(@T begin, @T end, @T->(usize n) stepper) {
		this.begin = begin;
		this.end = end;
		this.stepper = stepper;
		i = 0;
	}

	pub override @T next() {
		return stepper(++i);
	}

	pub override @T last() {
		return stepper(--i);
	}

	pub override @T cur() {
		return stepper(i);
	}

	pub @T operator[](usize n) {
		return stepper(n);
	}
}
