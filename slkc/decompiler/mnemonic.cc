#include "mnemonic.h"

#define MNEMONIC_ENTRY(m) \
	{ Opcode::m, #m }

using namespace slake;

std::unordered_map<Opcode, std::string> Decompiler::mnemonics = {
	MNEMONIC_ENTRY(NOP),

	MNEMONIC_ENTRY(PUSH),
	MNEMONIC_ENTRY(POP),

	MNEMONIC_ENTRY(LOAD),
	MNEMONIC_ENTRY(RLOAD),
	MNEMONIC_ENTRY(STORE),

	MNEMONIC_ENTRY(LVAR),
	MNEMONIC_ENTRY(LVARI8),
	MNEMONIC_ENTRY(LVARI16),
	MNEMONIC_ENTRY(LVARI32),
	MNEMONIC_ENTRY(LVARI64),
	MNEMONIC_ENTRY(LVARU8),
	MNEMONIC_ENTRY(LVARU16),
	MNEMONIC_ENTRY(LVARU32),
	MNEMONIC_ENTRY(LVARU64),
	MNEMONIC_ENTRY(LVARF32),
	MNEMONIC_ENTRY(LVARF64),
	MNEMONIC_ENTRY(LVARBOOL),
	MNEMONIC_ENTRY(LVAROBJ),

	MNEMONIC_ENTRY(LLOAD),
	MNEMONIC_ENTRY(LSTORE),

	MNEMONIC_ENTRY(LVALUE),

	MNEMONIC_ENTRY(EXPAND),
	MNEMONIC_ENTRY(SHRINK),

	MNEMONIC_ENTRY(ENTER),
	MNEMONIC_ENTRY(LEAVE),

	MNEMONIC_ENTRY(ADD),
	MNEMONIC_ENTRY(SUB),
	MNEMONIC_ENTRY(MUL),
	MNEMONIC_ENTRY(DIV),
	MNEMONIC_ENTRY(MOD),
	MNEMONIC_ENTRY(AND),
	MNEMONIC_ENTRY(OR),
	MNEMONIC_ENTRY(XOR),
	MNEMONIC_ENTRY(LAND),
	MNEMONIC_ENTRY(LOR),
	MNEMONIC_ENTRY(EQ),
	MNEMONIC_ENTRY(NEQ),
	MNEMONIC_ENTRY(LT),
	MNEMONIC_ENTRY(GT),
	MNEMONIC_ENTRY(LTEQ),
	MNEMONIC_ENTRY(GTEQ),
	MNEMONIC_ENTRY(LSH),
	MNEMONIC_ENTRY(RSH),

	MNEMONIC_ENTRY(REV),
	MNEMONIC_ENTRY(NOT),
	MNEMONIC_ENTRY(INCF),
	MNEMONIC_ENTRY(DECF),
	MNEMONIC_ENTRY(INCB),
	MNEMONIC_ENTRY(DECB),
	MNEMONIC_ENTRY(NEG),

	MNEMONIC_ENTRY(AT),

	MNEMONIC_ENTRY(JMP),
	MNEMONIC_ENTRY(JT),
	MNEMONIC_ENTRY(JF),

	MNEMONIC_ENTRY(SARG),
	MNEMONIC_ENTRY(LARG),

	MNEMONIC_ENTRY(LTHIS),

	MNEMONIC_ENTRY(CALL),
	MNEMONIC_ENTRY(MCALL),
	MNEMONIC_ENTRY(ACALL),
	MNEMONIC_ENTRY(AMCALL),
	MNEMONIC_ENTRY(RET),

	MNEMONIC_ENTRY(NEW),

	MNEMONIC_ENTRY(LRET),

	MNEMONIC_ENTRY(THROW),
	MNEMONIC_ENTRY(PUSHXH),

	MNEMONIC_ENTRY(ABORT),

	MNEMONIC_ENTRY(CASTI8),
	MNEMONIC_ENTRY(CASTI16),
	MNEMONIC_ENTRY(CASTI32),
	MNEMONIC_ENTRY(CASTI64),
	MNEMONIC_ENTRY(CASTU8),
	MNEMONIC_ENTRY(CASTU16),
	MNEMONIC_ENTRY(CASTU32),
	MNEMONIC_ENTRY(CASTU64),
	MNEMONIC_ENTRY(CASTF32),
	MNEMONIC_ENTRY(CASTF64),
	MNEMONIC_ENTRY(CASTBOOL),
	MNEMONIC_ENTRY(CASTOBJ),

	MNEMONIC_ENTRY(TYPEOF)
};
