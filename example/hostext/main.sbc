.module main

// .access native
// .fndecl void print ...

.fn i32 main
	PUSHARG "Entered main\n";

	PUSH 114514;

	LOAD %R0, print;
	CALL %R0;
	YIELD 0;

	LVAR i32;
	STORE $0u, 0;
	JMP #loopEnd;
loopStart:
	PUSHARG "Yielded\n";

	LOAD %R0, main.print;
	CALL %R0;
	YIELD *$0u;

	ADD $0u, *$0u, 1;

loopEnd:
	STORE %R0, *$0u;
	LT %R0, %R0, 100;
	JT #loopStart, %R0;

	POP %R0;

	RET %R0;
.end
