.module main

// .access native
// .fndecl void print ...

.fn i32 main
	PUSHARG "Entered main\n";

	PUSH 114514;

	REG 1u;
	LOAD %0u, print;
	CALL *%0u;
	YIELD 0;

	LVAR i32;
	STORE $0u, 0;
	JMP #loopEnd;
loopStart:
	PUSHARG "Yielded\n";

	LOAD %0u, main.print;
	CALL *%0u;
	YIELD *$0u;

	ADD $0u, *$0u, 1;

loopEnd:
	STORE %0u, *$0u;
	LT %0u, *%0u, 100;
	JT #loopStart, *%0u;

	POP %0u;

	RET *%0u;
.end
